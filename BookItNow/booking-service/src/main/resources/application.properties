server.port=8082

spring.application.name=booking-service

messaging.rabbit.enabled=true
messaging.kafka.enabled=true

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/booking_service_db
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=root

# JPA / Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Optional: Better error clarity
spring.web.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# Exchange / Queue / Routing Key
rabbitmq.payment.confirmed.queue=payment.confirmed.queue
rabbitmq.seat.exchange=seat.exchange
rabbitmq.seat.status.update.routing.key=seat.status.update

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=booking-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

